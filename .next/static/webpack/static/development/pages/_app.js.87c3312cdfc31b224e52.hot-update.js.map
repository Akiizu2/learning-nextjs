{"version":3,"file":"static/webpack/static/development/pages/_app.js.87c3312cdfc31b224e52.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import React from 'react'\nimport App, { Container } from 'next/app'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\n\nimport { validatePath } from '../routes'\nimport {\n  SignIn,\n  Navbar,\n  Sidebar,\n  Head,\n} from '../feature'\nimport reducers from '../reducer'\nimport styles from '../theme/_app.scss';\nimport NotFound from './not-found';\nimport {\n  isSignedIn,\n  initialize,\n  getUser,\n} from '../firebase'\n\nconst store = createStore(reducers)\n\nexport default class MyApp extends App {\n  static async getInitialProps({ Component, router, ctx }) {\n    let pageProps = {}\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx)\n    }\n    const isSignedInStatus = await isSignedIn()\n    return { pageProps, router, isSignedIn: isSignedInStatus }\n  }\n\n  state = {\n    isSignedIn: false,\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    let updateState = null\n    if (props.isSignedIn !== state.isSignedIn) {\n      updateState = {\n        ...updateState,\n        isSignedIn: props.isSignedIn\n      }\n    }\n    return updateState\n  }\n\n  componentDidMount() {\n    initialize()\n    this.checkUserStatus()\n  }\n\n  checkUserStatus = () => {\n    getUser((user) => {\n      if (user.type === 'signed_in') {\n        this.setState({\n          isSignedIn: true,\n        })\n      } else {\n        this.setState({\n          isSignedIn: false,\n        })\n      }\n\n    })\n  }\n\n  renderApp = () => {\n    const {\n      Component,\n      pageProps,\n      router,\n    } = this.props\n    const { isSignedIn } = this.state\n    console.log('isSignedIn', isSignedIn)\n    const isCorrectRoute = router.asPath === '/' || validatePath(router.asPath)\n    if (!isCorrectRoute) {\n      return <NotFound />\n    }\n    if (isCorrectRoute && !isSignedIn) {\n      return <SignIn isSignedIn={this._onSignedIn} />\n    }\n    return (\n      <React.Fragment>\n        <Head />\n        <Sidebar />\n        <Navbar />\n        <div className={styles.contentLayout}>\n          <Component {...pageProps} />\n        </div>\n      </React.Fragment>\n    )\n  }\n\n  render() {\n    return (\n      <Container>\n        <Provider store={store}>\n          {this.renderApp()}\n        </Provider>\n      </Container >\n    )\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;AAUA;AACA;AADA;AACA;AAmBA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;;;;;;AA9CA;AACA;AACA;AACA;;;AA4CA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;AA/EA;AACA;AACA;AAAA;;;;;;AACA;AACA;;AADA;AACA;;;AACA;AACA;;AADA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;AAMA;AACA;AACA;AAAA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AACA;;;;AAvBA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}